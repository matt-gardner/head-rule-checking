% TODO: add lots of documentation about how these ops lead to dependency pairs
% Add a subtree of root named "DEPS", for storing dependency pairs.
TOP=root without first child DEPS

insert (DEPS) >1 root

% Extract SUBJ dependencies.
TOP with last child
  (anything dominating
    (headedNP-SBJ%modifierToken
      dominating /^(.*)$/#1%modifierToken=modifier
      and immediately dominated by
        (headedTag%headToken dominating /^(.*)$/#1%headToken=head)))
  and with first child
    (DEPS=depsRoot not immediately dominating
      (~modifier with immediate right sister ~head))

insert modifier >-1 depsRoot
insert head >-1 depsRoot
insert (SUBJ) >-1 depsRoot

% Extract OBJ dependencies.
TOP with last child
  (anything dominating
    (rightmostHeadedNP%modifierToken
      dominating /^(.*)$/#1%modifierToken=modifier
      and immediately dominated by
        (headedVP%headToken dominating /^(.*)$/#1%headToken=head)))
  and with first child
    (DEPS=depsRoot not immediately dominating
      (~modifier with immediate right sister ~head))

insert modifier >-1 depsRoot
insert head >-1 depsRoot
insert (OBJ-DO) >-1 depsRoot

% Extract IO dependencies.
TOP with last child
  (anything dominating
    (leftmostHeadedNP%modifierToken
      dominating /^(.*)$/#1%modifierToken=modifier
      and immediately dominated by
        (headedVP%headToken dominating /^(.*)$/#1%headToken=head)
      and with a right sister (rightmostHeadedNP dominating /^(.*)$/)))
  and with first child
    (DEPS=depsRoot not immediately dominating
      (~modifier with immediate right sister ~head))

insert modifier >-1 depsRoot
insert head >-1 depsRoot
insert (OBJ-IO) >-1 depsRoot

% Make the head of each non-head-child depend on the head of the head-child.
% That is, for each (modifier, head) pair such that "modifier" and "head" have
% different heads, make "modifier" the parent of "head". The operation does this
% by adding "modifier", "head", and ??? (an unknown dependency relation) as the
% last children of DEPS.
TOP with last child
  (anything dominating
    (headedTag%modifierToken
      dominating /^(.*)$/#1%modifierToken=modifier
      and not immediately dominated by headedTag%modifierToken
      and immediately dominated by
        (headedTag%headToken dominating /^(.*)$/#1%headToken=head)))
  and with first child
    (DEPS=depsRoot not immediately dominating
      (~modifier with immediate right sister ~head))

insert modifier >-1 depsRoot
insert head >-1 depsRoot
insert (???) >-1 depsRoot

% Add the "ROOT" dependency
TOP with last child
  (headedTag%modifierToken
    dominating /^(.*)$/#1%modifierToken=modifier)
  and with first child
    (DEPS=depsRoot not immediately dominating
      (~modifier with immediate right sister /^0__ROOT__$/))

insert modifier >-1 depsRoot
insert (0__ROOT__) >-1 depsRoot
insert (ROOT) >-1 depsRoot

% Given a pair of adjacent siblings (modifier, head) under DEPS,
% move "head" under "modifier", for convenience.
DEPS immediately dominating
  (terminal=modifier without a left sister terminal
    and with immediate right sister
    (terminal=head with immediate right sister terminal=deprel))

move head >1 modifier
move deprel >2 modifier
